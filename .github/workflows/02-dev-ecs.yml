name: 02 - dev-ecs

on:
  pull_request:
    paths:
      - 'infra/dev-ecs/**'
      - 'Dockerfile'
      - 'src/**'
  push:
    branches: [ main ]
    paths:
      - 'infra/dev-ecs/**'
      - 'Dockerfile'
      - 'src/**'
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Optional image tag (defaults to short SHA)'
        required: false
        default: ''

permissions:
  id-token: write
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  NAME_PREFIX: ${{ vars.NAME_PREFIX }}     # fastapi
  ENVIRONMENT:   ${{ vars.ENVIRONMENT }}
  TF_BACKEND_BUCKET: ${{ vars.TF_STATE_BUCKET }}
  TF_BACKEND_DYNAMO_TABLE: ${{ vars.TF_LOCKS_TABLE }}
  LOG_GROUP_NAME: "/${{ vars.NAME_PREFIX }}/${{ vars.ENVIRONMENT }}"
  ECR_REPO_NAME: "${{ vars.NAME_PREFIX }}-${{ vars.ENVIRONMENT }}-ecr"

jobs:
  build_image:
    name: Build & Push to ECR
    runs-on: ubuntu-latest
    # On PR, build to ensure Dockerfile is OK but skip push
    outputs:
      image_tag: ${{ steps.meta.outputs.tag }}
      repo_url: ${{ steps.meta.outputs.repo_url }}
    steps:
      - uses: actions/checkout@v4
        with: { persist-credentials: false }

      - name: Configure AWS (OIDC) for build
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_BUILD_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Compute ECR repo URL & image tag
        id: meta
        shell: bash
        run: |
          ACCOUNT_ID="$(aws sts get-caller-identity --query Account --output text)"
          echo "repo_url=${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO_NAME}" >> $GITHUB_OUTPUT
          # tag = input || short SHA
          TAG="${{ github.event.inputs.image_tag }}"
          if [ -z "$TAG" ]; then TAG="${GITHUB_SHA::12}"; fi
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "ECR=${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO_NAME}:${TAG}"

      - name: Login to ECR
        if: github.event_name != 'pull_request'
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & Push
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ steps.meta.outputs.repo_url }}:${{ steps.meta.outputs.tag }}
            ${{ steps.meta.outputs.repo_url }}:latest-dev

  plan:
    name: Terraform plan
    runs-on: ubuntu-latest
    needs: [build_image]
    steps:
      - uses: actions/checkout@v4
        with: { persist-credentials: false }

      - uses: hashicorp/setup-terraform@v3

      - name: Configure AWS (OIDC) for deploy
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_DEPLOY_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform plan (dev-ecs)
        working-directory: infra/dev-ecs
        run: |
          chmod +x run.sh
          # On injecte explicitement NAME_PREFIX et LOG_GROUP_NAME pour rester 100% align√©
          NAME_PREFIX="${NAME_PREFIX}" LOG_GROUP_NAME="${LOG_GROUP_NAME}" ./run.sh plan

  apply:
    name: Terraform apply
    needs: [plan]
    if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main'
    environment: dev
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { persist-credentials: false }

      - uses: hashicorp/setup-terraform@v3

      - name: Configure AWS (OIDC) for deploy
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_DEPLOY_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform apply (dev-ecs)
        working-directory: infra/dev-ecs
        run: |
          chmod +x run.sh
          NAME_PREFIX="${NAME_PREFIX}" LOG_GROUP_NAME="${LOG_GROUP_NAME}" ./run.sh apply

      - name: Show ALB URL
        working-directory: infra/dev-ecs
        run: ./run.sh url || true
